application.name=cloudtravel-consumer
server.port=8082

logging.level.root=info

spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/cloudtravel_consumer?useAffectedRows=true&serverTimezone=UTC&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.initialSize=5
spring.datasource.druid.min-idle=5
spring.datasource.druid.max-active=20
spring.datasource.druid.max-wait=60000
spring.datasource.druid.time-between-eviction-runs-millis=60000
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-borrow=true
spring.datasource.druid.test-on-return=false
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
spring.datasource.druid.filter=stat
spring.datasource.druid.merge-sql=true
spring.datasource.druid.slow-sql-millis=5000
mybatis.mapperLocations=mapper/*.xml

#close template check
spring.freemarker.checkTemplateLocation=false

# dubbo config
dubbo.application.name=cloudtravel-consumer
dubbo.registry.protocol=zookeeper
dubbo.registry.address=127.0.0.1:2181
dubbo.protocol.name=dubbo
dubbo.protocol.port=20881

dubbo.monitor.protocol=registry

# dubbo.scan.base-packages=com.cloudtravel.consumer
#连接zk的超时时间，ms
dubbo.registry.timeout=10000
#启动应用时是否检查注册中心上有没有依赖的服务，默认true
#dubbo.consumer.check=false

# 访问template下的html文件需要配置模板，映射
spring.thymeleaf.prefix=classpath:templates/
# 开发时关闭缓存,不然没法看到实时页面
spring.thymeleaf.cache=false
spring.thymeleaf.check-template=false
spring.thymeleaf.check-template-location=false

Access-Control-Allow-Origin=*


# ************************** redis config start ****************************
spring.redis.dataBase=0
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=
# 连接池最大阻塞等待时间,使用负数表示无限制
spring.redis.maxWait=30000
# 连接池最大连接数 , -1表示不限
spring.redis.maxActive=100
# 连接池中最大空闲连接. 达到上限时,若有连接需求进来,则优先使用空闲连接
spring.redis.maxIdle=20
# 连接池中最小空闲连接数
spring.redis.minIdle=0
# redis处理超时时间
spring.redis.timeOut=3000
# ************************** redis config end ****************************