## mapper文件夹配置
#mybatis.mapper-locations=classpath:mapper/*.xml
## 有哪些库
#spring.shardingsphere.datasource.names=cloudtravel-consumer1,cloudtravel-consumer2
#
## 库cloudtravel-consumer1连接信息
#spring.shardingsphere.datasource.cloudtravel-consumer1.type=com.alibaba.druid.pool.DruidDataSource
#spring.shardingsphere.datasource.cloudtravel-consumer1.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.shardingsphere.datasource.cloudtravel-consumer1.url=jdbc:mysql://localhost:3306/cloudtravel_consumer1?useAffectedRows=true&serverTimezone=UTC&characterEncoding=utf-8
#spring.shardingsphere.datasource.cloudtravel-consumer1.username=root
#spring.shardingsphere.datasource.cloudtravel-consumer1.password=root
#
## 库cloudtravel-consumer2连接信息
#spring.shardingsphere.datasource.cloudtravel-consumer2.type=com.alibaba.druid.pool.DruidDataSource
#spring.shardingsphere.datasource.cloudtravel-consumer2.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.shardingsphere.datasource.cloudtravel-consumer2.url=jdbc:mysql://localhost:3306/cloudtravel_consumer1?useAffectedRows=true&serverTimezone=UTC&characterEncoding=utf-8
#spring.shardingsphere.datasource.cloudtravel-consumer2.username=root
#spring.shardingsphere.datasource.cloudtravel-consumer2.password=root
#
## 默认库使用cloudtravel-consumer1,即没有涉及分库分表策略配置的数据都在这个库中
#spring.shardingsphere.sharding.default-data-source-name=cloudtravel-consumer1
#
## 分库分表的表名
#spring.shardingsphere.sharding.binding-tables=B_USER,T_SP
## 默认分库字段即路由算法.也可制定对应的算法类algorithm-class
#spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=TENANT_ID
#spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=cloudtravel-consumer$->{TENANT_ID % 2 + 1}
#
## 表B_USER只参与分库.只配置其分库策略即可
#spring.shardingsphere.sharding.tables.B_USER.actual-data-nodes=cloudtravel-consumer$->{1..2}.B_USER
#spring.shardingsphere.sharding.tables.B_USER.database-strategy.inline.sharding-column=TENANT_ID
#spring.shardingsphere.sharding.tables.B_USER.database-strategy.inline.algorithm-expression=cloudtravel-consumer$->{TENANT_ID % 2 + 1}
#spring.shardingsphere.sharding.tables.B_USER.key-generator.column=id
#spring.shardingsphere.sharding.tables.B_USER.key-generator.type=SNOWFLAKE
#spring.shardingsphere.sharding.tables.B_USER.key-generator.props.worker.id=33
#
## T_SP即分库又分表,配置其分库的路由策略及分表的路由策略
#spring.shardingsphere.sharding.tables.T_SP.actual-data-nodes=cloudtravel-consumer$->{1..2}.T_SP_$->{0..1}
#spring.shardingsphere.sharding.tables.T_SP.database-strategy.inline.sharding-column=TENANT_ID
#spring.shardingsphere.sharding.tables.T_SP.database-strategy.inline.algorithm-expression=cloudtravel-consumer$->{TENANT_ID % 2 + 1}
#spring.shardingsphere.sharding.tables.T_SP.table-strategy.inline.sharding-column=BIZ_ID
#spring.shardingsphere.sharding.tables.T_SP.table-strategy.inline.algorithm-expression=T_SP_$->{BIZ_ID % 2}
#spring.shardingsphere.sharding.tables.T_SP.key-generator.column=SP_ID
#spring.shardingsphere.sharding.tables.T_SP.key-generator.type=SNOWFLAKE
#spring.shardingsphere.sharding.tables.T_SP.key-generator.props.worker.id=33
#mybatis.configuration.map-underscore-to-camel-case: true
#
## 是否打印sql语句
#spring.shardingsphere.props.sql.show=true