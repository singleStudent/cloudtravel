application.name=cloudtravel-shardingsphere
server.port=8086

logging.level.web=info
# 可打印详细启动日志
logging.level.root=info

# ************************** sharding sphere config start ****************************
# 参与分库的表,用逗号分隔,不在此定义的,直接路由到默认库中
SHARDING-DATABASE-TABLE-NAMES=B_USER,T_SP
# 参与分表的表,用逗号分隔
SHARDING-TABLE-NAMES=T_SP

# 公共分库字段
database.sharding.column=TENANT_ID

# 表b_user的路由节点
table.user.actual-data-nodes=cloudtravel_consumer$->{1..2}.b_user

# 表t_sp的路由节点
table.sp.actual-data-nodes=cloudtravel_consumer$->{1..2}.t_sp_$->{0..1}

# 表t_sp分表字段
table.sp.sharding.column=BIZ_ID

# Configure the 1st data source
sharding.datasource1.name=cloudtravel_consumer1
datasource.cloudtravel-consumer1.driver-class-name=com.mysql.cj.jdbc.Driver
datasource.cloudtravel-consumer1.url=jdbc:mysql://localhost:3306/cloudtravel_consumer1?useAffectedRows=true&serverTimezone=UTC&characterEncoding=utf-8
datasource.cloudtravel-consumer1.username=root
datasource.cloudtravel-consumer1.password=root

# Configure the 2nd data source
SHARDING.datasource2.name=cloudtravel_consumer2
datasource.cloudtravel-consumer2.driver-class-name=com.mysql.cj.jdbc.Driver
datasource.cloudtravel-consumer2.url=jdbc:mysql://localhost:3306/cloudtravel_consumer2?useAffectedRows=true&serverTimezone=UTC&characterEncoding=utf-8
datasource.cloudtravel-consumer2.username=root
datasource.cloudtravel-consumer2.password=root

# 是否打印sql语句

mybatis.mapper-locations=classpath:mapper/*.xml


# ************************** sharding sphere config end ****************************

#close template check
spring.freemarker.checkTemplateLocation=false

# dubbo config
dubbo.application.name=cloudtravel-shardingsphere
dubbo.registry.protocol=zookeeper
dubbo.registry.address=127.0.0.1:2181
dubbo.protocol.name=dubbo
dubbo.protocol.port=20886
dubbo.protocol.timeout=10000
dubbo.scan.base-packages=com.cloudtravel.shardingsphere
dubbo.monitor.protocol=registry


spring.thymeleaf.prefix=classpath:templates/
spring.thymeleaf.cache=false
spring.thymeleaf.check-template=false
spring.thymeleaf.check-template-location=false

Access-Control-Allow-Origin=*


# ************************** redis config start ****************************
spring.redis.dataBase=0
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=
# 连接池最大阻塞等待时间,使用负数表示无限制
spring.redis.maxWait=30000
# 连接池最大连接数 , -1表示不限
spring.redis.maxActive=100
# 连接池中最大空闲连接. 达到上限时,若有连接需求进来,则优先使用空闲连接
spring.redis.maxIdle=20
# 连接池中最小空闲连接数
spring.redis.minIdle=0
# redis处理超时时间
spring.redis.timeOut=3000
# ************************** redis config end ****************************