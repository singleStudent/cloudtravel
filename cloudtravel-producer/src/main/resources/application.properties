application.name=cloudtravel-producer
server.port=8081
logging.level.web=info
logging.level.root=info

# ************************** datasource config start ****************************
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/cloudtravel_producer?useAffectedRows=true&serverTimezone=UTC&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.initialSize=5
spring.datasource.druid.min-idle=5
spring.datasource.druid.max-active=20
spring.datasource.druid.max-wait=60000
spring.datasource.druid.time-between-eviction-runs-millis=60000
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-borrow=true
spring.datasource.druid.test-on-return=false
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
spring.datasource.druid.filter=stat
spring.datasource.druid.merge-sql=true
spring.datasource.druid.slow-sql-millis=5000
mybatis.mapperLocations=classpath:mapper/*.xml

# ************************** datasource config end ****************************

#close template check
spring.freemarker.checkTemplateLocation=false

# dubbo config
config.dubbo.application.name=cloudtravel-producer
config.dubbo.registry.protocol=zookeeper
config.dubbo.registry.address=127.0.0.1:2181
config.dubbo.protocol.name=dubbo
config.dubbo.protocol.port=20880
config.dubbo.protocol.timeout=10000

config.dubbo.monitor.protocol=registry

spring.thymeleaf.prefix=classpath:templates/
spring.thymeleaf.cache=false
spring.thymeleaf.check-template=false
spring.thymeleaf.check-template-location=false

Access-Control-Allow-Origin=*
# ************************** redis config start ****************************
spring.redis.dataBase=0
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=
spring.redis.maxWait=30000
spring.redis.maxActive=100
spring.redis.maxIdle=20
spring.redis.minIdle=0
spring.redis.timeOut=15000
# ************************** redis config end ****************************


# ************************** seata config start ****************************
seata.enabled=true
seata.application-id=cloudtravel-producer
seata.tx-service-group=sp-user-seata-group
seata.service.default.grouplist=127.0.0.1:8091
seata.service.vgroup-mapping.sp-user-seata-group=default
seata.enableAutoDataSourceProxy=false
seata.registry.type=zk
##seata.registry.file.name=registry.conf
# ************************** seata config end ****************************

# ************************** elasticsearch config start ****************************

spring.data.elasticsearch.cluster-name=my-es
spring.data.elasticsearch.cluster-nodes=127.0.0.1:9300
# 开启es仓库 . default = true
spring.data.elasticsearch.repositories.enabled=true
# ************************** elasticsearch config end ****************************


# ************************** sa-token config start ****************************
# token名称 (同时也是cookie名称)
sa-token.token-name=sa-token

# token有效期，单位s 默认30天, -1代表永不过期
sa-token.timeout=3600
# token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
sa-token.activity-timeout=3600
# 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
sa-token.is-concurrent=true
# 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
sa-token.is-share=false
# token风格
sa-token.token-style=uuid
# 是否输出操作日志
sa-token.is-log=true

# ************************** sa-token config end ****************************